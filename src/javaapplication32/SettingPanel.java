/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication32;

import java.io.File;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import presentationModels.AnswerButtonButtonControll;
import presentationModels.AnswerButtonFileIOController;
import presentationModels.FileIOController;
import presentationModels.SolutionPlugController;
import schejulingModel.Solutions;

/**
 *
 * @author 117
 */
public class SettingPanel extends javax.swing.JPanel {

    /**
     * Creates new form SettingPanel
     */
    public SettingPanel() {
        initComponents();

        //コントローラの初期化
        this.fileIO = null;
        this.solutionPlug = null;



        //ファイルチューザの初期化
        this.jFileChooser1 = new JFileChooser();

        FileNameExtensionFilter filter = new FileNameExtensionFilter("TXTファイル(.txt)", "txt");
        jFileChooser1.setDialogTitle("入力の選択");
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.addChoosableFileFilter(filter);
        jFileChooser1.setMultiSelectionEnabled(false);


        //ファイルチューザの初期化
        this.jFileChooser2 = new JFileChooser();
        FileNameExtensionFilter filter2 = new FileNameExtensionFilter("Excel ワークシート(.xls)(.xlsx)", "xls", "xlsx");
        jFileChooser2.setAcceptAllFileFilterUsed(false);
        jFileChooser2.addChoosableFileFilter(filter2);
        jFileChooser2.setDialogTitle("出力を保存");
        jFileChooser2.setMultiSelectionEnabled(false);


        //コンボボックスの初期化

        String[] dummys = {"解法を選択", "", "", "", "", "", "", "", ""};

        ComboBoxModel comboModel = new DefaultComboBoxModel(dummys);

        jComboBox1.setModel(comboModel);
        jComboBox1.setMaximumRowCount(8);


        //説明ブロックの初期化
        jTextArea1.setEditable(false);
        jTextArea1.setText("(解法の説明)");




    }

    public void setEnablejButton1(Boolean boo) {
        jButton1.setEnabled(boo);
    }

    public JButton getjButton1() {
        return jButton1;
    }

    public JTextArea getjTextArea1() {
        return jTextArea1;
    }

    public JButton getjButton2() {
        return jButton2;
    }

    public JComboBox getComboBox(){
        return jComboBox1;
    }
    public void setAnswerButtonController(AnswerButtonButtonControll answerButtonController) {
        this.answerButtonController = answerButtonController;
    }

    public void setFileOutButtonController(AnswerButtonFileIOController afileIOController) {
        this.fileIOButtonController = afileIOController;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }
    
    public void apearOptionWindow(String error, Boolean bool){
        String message;
        
        if (bool) {
            message = "結果をファイルに出力しました。";
        }else{
            message = error;
        }
        
        JOptionPane.showMessageDialog(this, message);
        
    }
    

    public void setSolutionPlug(SolutionPlugController solutionPlug) {
        this.solutionPlug = solutionPlug;
    }

    public void setFileIOController(FileIOController anController) {
        this.fileIO = anController;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 300));
        setLayout(new java.awt.GridLayout(1, 2));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("ファイル選択"));
        jPanel1.setPreferredSize(new java.awt.Dimension(240, 165));
        jPanel1.setLayout(new java.awt.GridLayout(3, 0));

        jButton1.setText("Open Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jLabel1.setText("File Infomation");
        jLabel1.setToolTipText("ファイルの入力状況を示します");
        jLabel1.setFocusable(false);
        jPanel1.add(jLabel1);

        jLabel2.setText("Inspection");
        jLabel2.setToolTipText("データが正しいか検査した結果を示します");
        jLabel2.setFocusable(false);
        jPanel1.add(jLabel2);

        add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("解法選択"));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 259));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(16);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(4);
        jTextArea1.setTabSize(15);
        jTextArea1.setText("（解法の説明）");
        jTextArea1.setToolTipText("");
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel3, java.awt.BorderLayout.CENTER);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox1PopupMenuWillBecomeVisible(evt);
            }
        });
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jComboBox1, java.awt.BorderLayout.PAGE_START);

        jPanel2.add(jPanel4);
        jPanel4.getAccessibleContext().setAccessibleName("");
        jPanel4.getAccessibleContext().setAccessibleDescription("");

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jButton3.setText("Excelで出力");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton3);

        jButton2.setForeground(new java.awt.Color(255, 51, 0));
        jButton2.setText("EXCECUTE");
        jButton2.setToolTipText("");
        jButton2.setEnabled(false);
        jButton2.setPreferredSize(new java.awt.Dimension(180, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton2);

        jPanel2.add(jPanel7);

        add(jPanel2);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        assert jButton2.isEnabled();
        answerButtonController.Excecute();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //読みだされるテキストファイルを選択する。

        int selected;


        setEnablejButton1(false);
        selected = jFileChooser1.showDialog(this, "読み込み");

        if (selected == JFileChooser.APPROVE_OPTION) {

            File file = jFileChooser1.getSelectedFile();


            jLabel1.setText(file.getName());
            fileIO.fileChange(file);
            setEnablejButton1(true);


        } else if (selected == JFileChooser.CANCEL_OPTION) {
            jLabel1.setText("キャンセルされました");
            setEnablejButton1(true);
        } else if (selected == JFileChooser.ERROR_OPTION) {
            jLabel1.setText("エラー又は取消");
            setEnablejButton1(true);
        }







    }//GEN-LAST:event_jButton1ActionPerformed

    public JButton getjButton3() {
        return jButton3;
    }

    public void setEnablejButton3(Boolean bool) {
        jButton3.setEnabled(bool);
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1PopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox1PopupMenuWillBecomeVisible
        if (applyWantFlag) {
            ComboBoxModel solutionList = new DefaultComboBoxModel(solutionPlug.getSolutions());
            jComboBox1.setModel(solutionList);
            applyWantFlag = false;
        }


    }//GEN-LAST:event_jComboBox1PopupMenuWillBecomeVisible

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

        Solutions getted = (Solutions) jComboBox1.getSelectedItem();


        solutionPlug.indicateJadge(getted);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selected;
        int existFile;


        setEnablejButton3(false);
        selected = jFileChooser2.showSaveDialog(this);

        if (selected == JFileChooser.APPROVE_OPTION) {

            File file = jFileChooser2.getSelectedFile();

            
            String[] splitFileName = file.getName().split("\\.");
            String extension;
            
            if (splitFileName.length > 1) {
                extension = splitFileName[splitFileName.length -1];
            }else{
                extension = "";
            }
            
            if(extension.equals("xls")||extension.equals("xlsx")){
            
            }else{
                String name = file.getPath();
                file = new File(name + ".xlsx");
                
            }
            
            

            //ファイルがあった場合の警告。
            if (file.exists()) {
                existFile = JOptionPane.showConfirmDialog(null,
                        "同じ名前のファイルが存在します。上書きしますか？",
                        "上書き警告", JOptionPane.YES_NO_OPTION);

                if (existFile == JOptionPane.YES_OPTION) {
               
                    
                    
                    fileIOButtonController.Expression(file);
                    
                }
                
                if(existFile == JOptionPane.NO_OPTION){
                    return;
                }
                
                
                
                
            }


          fileIOButtonController.Expression(file);  

            
        }else if (selected == JFileChooser.CANCEL_OPTION) {
            
            setEnablejButton3(true);
        } else if (selected == JFileChooser.ERROR_OPTION) {
            
            setEnablejButton3(true);
        }




    }//GEN-LAST:event_jButton3ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    private FileIOController fileIO;
    private SolutionPlugController solutionPlug;
    private AnswerButtonButtonControll answerButtonController;
    private AnswerButtonFileIOController fileIOButtonController;
    //解法選択肢再描画防ぎ用
    private boolean applyWantFlag = true;
    private javax.swing.JFileChooser jFileChooser2;
}
